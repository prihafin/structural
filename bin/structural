#!/usr/bin/env node

let structural = require('../lib/structural');
let fs = require('fs');
let path = require('path');
let nopt = require('nopt');

function processDefines(text) {
  let defines = [];
  text = text.split("\n");
  text = text.filter((row) => {
    let isdef = row.startsWith("#define");
    if(isdef) {
      row = row.trim().split(" ");
      defines.push([row[1], row.slice(2).join(" ")]);
    }
    return !isdef;
  });
  text = text.join("\n");

  for(let define of defines) {
    let r = new RegExp("\\b" + define[0] + "\\b", "g");
    text = text.replace(r, define[1]);
  }
  return text;
}

/**
 * remove extension from a filename
 * @param {String} fn - the filename
 * @returns {String} the filename without extension
 */
function removeExtension(fn) {
  let i = fn.lastIndexOf(".");
  if(i<0) return fn;
  return fn.slice(0, i);
}

try {
  let args = nopt({"out": String, "language": String}, {"o":"--out", "l":"--language"}, process.argv, 2);
  let input = args.argv.remain[0];
  if(args.language===undefined) args.language = "js";
  if(args.out===undefined) args.out = removeExtension(input)+"."+args.language;

  let lang = require("../lib/language.js");
  let text = fs.readFileSync(input, "utf-8");
  text = processDefines(text);

  let output = lang.parse(text, {actions:new structural.Actions()});

  let builder = require("../lib/builder-"+args.language);

  let res = builder.build(input, output);

  fs.writeFileSync(args.out, res);

  console.log("output written to "+args.out);
} catch (e) {
  console.error(e.message);
  console.error(e.stack);
  process.exit(1);
}
