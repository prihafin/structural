#!/usr/bin/env node

let structural = require('../lib/structural');
let fs = require('fs');
let nopt = require('nopt');

/**
 * remove extension from a filename
 * @param {String} fn - the filename
 * @returns {String} the filename without extension
 */
function removeExtension(fn) {
  let i = fn.lastIndexOf(".");
  if(i<0) return fn;
  return fn.slice(0, i);
}

exports.parse = function parse(...argv) {
  try {
    let args = nopt({"out": String, "language": String}, {"o":"--out", "l":"--language"}, argv, 0);
    let input = args.argv.remain[0];
    if(args.language===undefined) args.language = "js";
    if(args.out===undefined) args.out = removeExtension(input)+"."+args.language;

    let ssrc = fs.statSync(input);
    let sdst = fs.statSync(args.out);

    let lang = require("../lib/language.js");
    let text = fs.readFileSync(input, "utf-8");
    text = structural.processDefines(text);
    text = text.trim();

    let output = lang.parse(text, {actions:new structural.Actions()});

    if(ssrc.mtime<=sdst.mtime) return;

    let builder = require("../lib/builder-"+args.language);

    let res = builder.build(input, output);

    fs.writeFileSync(args.out, res);

    console.log("output written to "+args.out);
  } catch (e) {
    console.error(e);
    process.exit(-1);
  }
}

if(require.main===module) {
  if(process.argv.length<3) {
    console.log('usage: structural [--language|-l=js|py] definitions.h [--out|-o outfilename]');
    return;
  }

  exports.parse(...process.argv.slice(2));
}